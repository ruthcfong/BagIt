BagIt DocumentationAn iPhone App: Order Your Bagged Meal Today!Ruth Fong, Class of 2015, in StoughtonCS50, Fall 2011Professor David Malan, TF Rob Bowden8 December 2011

Getting Started To run the program, first make sure at least Xcode 3 or a newer version is installed on your computer. If Xcode needs to be installed, it can be downloaded from this website: http://developer.apple.com/xcode/index.php. (These instructions were tested on an OS system running Xcode 3; instructions for a newer version of Xcode may be slightly different). Once Xcode has been installed, run the text editing environment. Depending on the version of Xcode being run on your system, you see a welcome screen. From there, if “BagIt” is listed as a recent project, select “Open”; otherwise, either select “Open other” from the welcome screen or click on the “File” drop-down menu and select “Open” from there (or press ⌘+O). Then, find where “BagIt.xcodeproj” is saved on your drive and open that file.  Next, navigation to the “Build” drop-down menu and select the “Build” option to build the executable file (⌘+B). Finally, navigate to the “Run” drop-down menu and select the “Run” option (⌘+R). An iOS simulator should pop up and simulate an iPhone or an iPad running BagIt. (To specifically run the app in an iPhone simulator, navigate to the “Project” drop-down menu, and click the “Set Active Executable” option and select the option “BagIt – iPhone Simulator 4.3”.)


Selecting a MealOnce the BagIt app is running in the simulator, the first screen that appears prompts the user to “Select a Meal”. Click on one of the options: Breakfast, Lunch, or Dinner.


Specifying Pickup InformationThe next screen that will appear prompts the user to enter information about where and when s/he will pick up the bagged meal. Annenberg and tomorrow’s date are preselected for the location and date of pickup. Select the desired pickup location, date, and time by clicking on the textbox and selecting the desired option from the popup picker view and clicking the “Done” button. To go back to the main screen, click the “Cancel” button when the picker is displayed. If running the simulation on a laptop that supports multi-touch gestures (i.e. a relatively new MacBook), options can be scrolled through by holding down a click with one finger and using another finger to swipe up or down. Be mindful not to click “Done” before the picker stops moving, lest the program crash because the picker has not stopped at a particular option. Also, make sure that the picker actually selects an item and is not in between two items. Once all three fields must be selected, click the “Next” button.


Ordering a Meal
BreakfastIf on the first screen, the user selected to order a breakfast, a table of breakfast items will appear on the next screen. Please choose at least one item and at most five items from this list by clicking on each desired item. A green checkmark sign will appear next to selected items; to deselect items, simply click on the item name again. Once the desired items have been selected, click on the “Submit” button.
Lunch or Dinner
Selecting EntreesIf on the first screen, the user selected to order either a lunch or dinner, the next screen will prompt the user to enter the desired specifications for his/her first entrée order. At least one entrée must be selected, and a Chef’s Salad counts as two entrées, so other selections with a Chef’s Salad will be ignored. First select the desired item. Then, appropriate text fields will appear that allow the user to provide more information about the item s/he wants (i.e. what type of bread and/or cheese for a sandwich, what type of dressing for a salad). These fields are optional. Once the desired configuration of the first entrée has been specified click on the “Next” button.
The next screen will be similar to the previous screen and will prompt the user to enter the desired specifications for a second entrée. This form is optional; the user is not required to order a second entrée. After configuring specifications for a second entrée (or leaving the form blank), click the “Next” button.
Selecting SidesThe final screen that will appear prompts the user to enter in what (if any) drink, fruit, and snacks s/he would like. All of these sides are optional. After specifying desired drink, fruit, and/or snacks, if any, click the “Submit” button.


Reviewing and Submitting OrderOnce the “Submit” button is hit, a pop up will appear with the details of the order placed. To “place” the order, click the “Submit” button on this pop up. To change or edit the order, click “Cancel” and make modifications by using the back and forward navigation arrows.


Navigating through the AppTo navigate back and forth between screens, use the back arrow at the top-left-hand corner of the stimulator to go to the previous screen.


Testing SubmissionTo test submission, click back onto the Xcode window and navigate to the Run drop-down menu. From there, click the “Console” option (⌘++R). Once the “Submit” button has been clicked and the order has been “submitted”, the last line in the Console will be a concatenated string that represents the configured order. Copy (⌘+C) this string into the drive’s clipboard.
Next, run any popular internet browser and navigate to this URL: http://www.dining.harvard.edu/myhuds/students/. This is a PIN-authenticated site of the Harvard University Dining Services (HUDS). Enter a valid login ID and PIN and click “Login”. The URL should now be the aforementioned URL; if not, navigate to that URL again. Once at the URL, append the copied string to the end of the URL and hit the “Enter” key.
If the order has been successfully made, an “Order Confirmation” page will then appear. If the order was placed simply for testing purposes, to cancel the order, simply click the “Cancel Order” button and then click the “Okay” button on the pop-up dialog box that appears asking if the order should really be cancelled.

CreditsDavid Malan for being an inspiring Professor and making CS exciting.Rob Bowden for always being available to answer my many questions.Nida Naushad for answering my design questions and diligently sifting through my many pages of code.Tommy MacWilliam for answering my Objective-C questions.The rest of the CS50 TFs and staff for making this course a truly fantastic (cultish-in-a-good-way) experience.